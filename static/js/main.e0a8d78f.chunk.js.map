{"version":3,"sources":["table/TableHeader.js","table/TableContent.js","App.js","index.js"],"names":["TableHeader","props","valueToOrderBy","orderDirection","handleRequestSort","createSortHandler","property","event","TableHead","TableRow","className","TableCell","TableSortLabel","active","direction","onClick","classNam","descendingComparator","a","b","orderBy","sortedRowInformation","rowArray","comparator","stabilizedRowArray","map","el","index","sort","order","TableContent","coins","useState","setOrderDirection","setValueToOrderBy","TableContainer","Table","isAscending","coin","src","image","name","symbol","current_price","toLocaleString","price_change_percentage_24h","toFixed","high_24h","low_24h","market_cap","App","setCoins","setLoading","search","setSearch","useEffect","axios","get","res","data","fetchCoins","console","log","filteredCoins","filter","toLowerCase","includes","fill","type","onChange","e","preventDefault","target","value","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySASe,SAASA,EAAYC,GAChC,IAAOC,EAAiDD,EAAjDC,eAAeC,EAAkCF,EAAlCE,eAAeC,EAAmBH,EAAnBG,kBAE/BC,EAAoB,SAACC,GAAD,OAAc,SAACC,GACrCH,EAAkBG,EAAMD,KAG5B,OACI,cAACE,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAUC,UAAU,QAApB,UACI,cAACC,EAAA,EAAD,CAAsBD,UAAU,yBAAhC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,SAAnBX,EACRY,UAA4B,SAAjBZ,EAA0BC,EAAe,MACpDY,QAASV,EAAkB,QAC3BK,UAAU,YAJd,mBADW,QAUf,cAACC,EAAA,EAAD,CAAwBD,UAAU,2BAAlC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,WAAnBX,EACRY,UAA4B,WAAjBZ,EAA4BC,EAAe,MACtDY,QAASV,EAAkB,UAC3BK,UAAU,cAJd,qBADW,UAUf,cAACC,EAAA,EAAD,CAA+BD,UAAU,0BAAzC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,kBAAnBX,EACRY,UAA4B,kBAAjBZ,EAAmCC,EAAe,MAC7DY,QAASV,EAAkB,iBAC3BK,UAAU,aAJd,4BADW,iBAUf,cAACC,EAAA,EAAD,CAA6CD,UAAU,4BAAvD,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,gCAAnBX,EACRY,UAA4B,gCAAjBZ,EAAiDC,EAAe,MAC3EY,QAASV,EAAkB,+BAC3BK,UAAU,eAJd,kBADW,+BAUf,cAACC,EAAA,EAAD,CAA0BD,UAAU,yBAApC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,aAAnBX,EACRY,UAA4B,aAAjBZ,EAA8BC,EAAe,MACxDY,QAASV,EAAkB,YAC3BK,UAAU,YAJd,uBADW,YAUf,cAACC,EAAA,EAAD,CAAyBD,UAAU,wBAAnC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,YAAnBX,EACRY,UAA4B,YAAjBZ,EAA6BC,EAAe,MACvDY,QAASV,EAAkB,WAC3BW,SAAS,WAJb,sBADW,WAUf,cAACL,EAAA,EAAD,CAA4BD,UAAU,8BAAtC,SACI,cAACE,EAAA,EAAD,CACIC,OAA2B,eAAnBX,EACRY,UAA4B,eAAjBZ,EAAgCC,EAAe,MAC1DY,QAASV,EAAkB,cAC3BK,UAAU,iBAJd,yBADW,mBC/D/B,SAASO,EAAqBC,EAAGC,EAAGC,GAChC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAOX,IAAMC,EAAuB,SAACC,EAASC,GAEnC,IAAMC,EAAqBF,EAASG,KAAI,SAACC,EAAGC,GAAJ,MAAY,CAACD,EAAGC,MAQzD,OANCH,EAAmBI,MAAK,SAACV,EAAEC,GACvB,IAAMU,EAAQN,EAAWL,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVU,EAAoBA,EACjBX,EAAE,GAAKC,EAAE,MAGdK,EAAmBC,KAAI,SAACC,GAAD,OAAQA,EAAG,OAG7B,SAASI,EAAT,GAAgC,IAlBxBD,EAAMT,EAkBSW,EAAQ,EAARA,MAElC,EAAyCC,mBAAS,OAAlD,mBAAO7B,EAAP,KAAsB8B,EAAtB,KACA,EAA2CD,mBAAS,cAApD,mBAAO9B,EAAP,KAAuBgC,EAAvB,KACA,EAAqBF,mBAAS,GAA9B,mBACA,GADA,UACmCA,mBAAS,IAA5C,mBACA,GADA,UACyCA,mBAASD,IAAlD,6BAaA,OACI,mCACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACpC,EAAD,CACIE,eAAgBA,EAChBC,eAAgBA,EAChBC,kBAfM,SAACG,EAAMD,GAE7B,IAAM+B,EAAenC,IAAmBI,GAA+B,QAAnBH,EAEpD+B,EAAkB5B,GAClB2B,EAAkBI,EAAa,OAAS,UAaxBhB,EAAqBU,GA/CtBF,EA+C0C1B,EA/CpCiB,EA+CmDlB,EA9C3D,SAAV2B,EACL,SAACX,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGC,MA4CqDK,KAAI,SAACa,EAAKX,GAAN,OACzE,eAAClB,EAAA,EAAD,CAAsBC,UAAU,OAAhC,UACI,eAACC,EAAA,EAAD,CAAWD,UAAU,YAArB,UACI,qBAAK6B,IAAKD,EAAKE,QACdF,EAAKG,QAEV,cAAC9B,EAAA,EAAD,CAAWD,UAAU,cAArB,SACK4B,EAAKI,SAGV,eAAC/B,EAAA,EAAD,CAAWD,UAAU,cAArB,mBACM4B,EAAKK,cAAcC,eAAe,YAMvCN,EAAKO,4BAA8B,EAChC,eAAClC,EAAA,EAAD,CAAWD,UAAU,mBAArB,UAAyC4B,EAAKO,4BAA4BC,QAAQ,GAAlF,OAEA,eAACnC,EAAA,EAAD,CAAWD,UAAU,qBAArB,UAA2C4B,EAAKO,4BAA4BC,QAAQ,GAApF,OAGJ,eAACnC,EAAA,EAAD,CAAWD,UAAU,YAArB,mBACM4B,EAAKS,SAASH,eAAe,YAEnC,eAACjC,EAAA,EAAD,CAAWK,SAAS,WAApB,mBACMsB,EAAKU,QAAQJ,eAAe,YAElC,eAACjC,EAAA,EAAD,CAAWD,UAAU,kBAArB,mBACM4B,EAAKW,WAAWL,eAAe,cA7B1BjB,a,YClB5BuB,MAhDf,WACE,MAAuBlB,mBAAS,IAAhC,mBAAOD,EAAP,KAAaoB,EAAb,KACA,EAA2BnB,oBAAS,GAApC,mBAAeoB,GAAf,WACA,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAEAC,qBAAU,YACQ,uCAAG,4BAAArC,EAAA,6DACjBkC,GAAW,GADM,SAECI,IAAMC,IAAI,4HAFX,OAEXC,EAFW,OAGjBP,EAASO,EAAIC,MACbP,GAAW,GAJM,2CAAH,qDAMhBQ,KAEA,IACFC,QAAQC,IAAI/B,GACZ,IAKMgC,EAAgBhC,EAAMiC,QAAO,SAAA1B,GAAI,OACrCA,EAAKG,KAAKwB,cAAcC,SAASb,EAAOY,kBAG1C,OACE,sBAAKvD,UAAU,sBAAf,UACE,qBAAIA,UAAU,gBAAd,2BAA6C,cAAC,IAAD,CAAgByD,KAAK,eAClE,qBAAKzD,UAAU,cAAf,SAEE,+BACE,uBACEA,UAAU,aACV0D,KAAK,OACLC,SAlBW,SAAAC,GACnBA,EAAEC,iBACFjB,EAAUgB,EAAEE,OAAOC,QAiBXC,YAAY,0BAKlB,cAAC5C,EAAD,CAAcC,MAAOgC,QC1C3BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0a8d78f.chunk.js","sourcesContent":["import Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nexport default function TableHeader(props) {\r\n    const {valueToOrderBy,orderDirection,handleRequestSort}=props\r\n\r\n    const createSortHandler = (property) => (event) =>{\r\n        handleRequestSort(event,property);\r\n    }\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow className=\"coin \" >\r\n                <TableCell key=\"name\" className=\"table-header coin-name\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"name\"}\r\n                        direction={valueToOrderBy===\"name\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"name\")}\r\n                        className=\"coin-name\"\r\n                    >\r\n                        Name\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"symbol\" className=\"table-header coin-symbol\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"symbol\"}\r\n                        direction={valueToOrderBy===\"symbol\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"symbol\")}\r\n                        className=\"coin-symbol\"\r\n                    >\r\n                        Symbol\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"current-price\" className=\"table-header coin-price\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"current_price\"}\r\n                        direction={valueToOrderBy===\"current_price\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"current_price\")}\r\n                        className=\"coin-price\"\r\n                    >\r\n                        Current Price\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"price_change_percentage_24h\" className=\"table-header coin-percent\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"price_change_percentage_24h\"}\r\n                        direction={valueToOrderBy===\"price_change_percentage_24h\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"price_change_percentage_24h\")}\r\n                        className=\"coin-percent\"\r\n                    >\r\n                        24h\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"high_24h\" className=\"table-header coin-high\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"high_24h\"}\r\n                        direction={valueToOrderBy===\"high_24h\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"high_24h\")}\r\n                        className=\"coin-high\"\r\n                    >\r\n                        24h High\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"low_24h\" className=\"table-header coin-low\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"low_24h\"}\r\n                        direction={valueToOrderBy===\"low_24h\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"low_24h\")}\r\n                        classNam=\"coin-low\"\r\n                    >\r\n                        24h Low\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"market_cap\" className=\"table-header coin-marketcap\">\r\n                    <TableSortLabel\r\n                        active={valueToOrderBy === \"market_cap\"}\r\n                        direction={valueToOrderBy===\"market_cap\" ? orderDirection:\"asc\"}\r\n                        onClick={createSortHandler(\"market_cap\")}\r\n                        className=\"coin-marketcap\"\r\n                    >\r\n                        Market-Cap\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableHeader from './TableHeader';\r\n\r\n// const rowInformation = [\r\n//     {\"name\" : \"Bob\", \"age\":23 },\r\n//     {\"name\" : \"Jenny\", \"age\":30}\r\n// ]\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order,orderBy){\r\n    return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nconst sortedRowInformation = (rowArray,comparator)=>{\r\n    // console.log(rowArray);\r\n    const stabilizedRowArray = rowArray.map((el,index)=>[el,index]);\r\n    // console.log(stabilizedRowArray);\r\n    stabilizedRowArray.sort((a,b)=>{\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n\r\n   return stabilizedRowArray.map((el) => el[0]);\r\n}\r\n\r\nexport default function TableContent({coins}) {\r\n    // console.log(coins);\r\n    const [orderDirection,setOrderDirection]=useState('asc');\r\n    const [valueToOrderBy, setValueToOrderBy]= useState('market-cap');\r\n    const [page,setPage]=useState(0);\r\n    const [rowsPerPage,setRowsPerPage]=useState(1);\r\n    const [rowInformation,setRowInformation]=useState(coins);\r\n    \r\n    // console.log(coins);\r\n    // setRowInformation({coins});\r\n    // console.log(setRowInformation)\r\n    const handleRequestSort = (event,property)=> {\r\n        // console.log(property,valueToOrderBy,orderDirection);\r\n        const isAscending = (valueToOrderBy === property && orderDirection === 'asc');\r\n        // console.log(isAscending);\r\n        setValueToOrderBy(property);\r\n        setOrderDirection(isAscending? 'desc' : 'asc');\r\n    }\r\n    // console.log(rowInformation);\r\n    return (\r\n        <>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHeader\r\n                        valueToOrderBy={valueToOrderBy}\r\n                        orderDirection={orderDirection}\r\n                        handleRequestSort={handleRequestSort}\r\n                    />\r\n                    {   \r\n                        sortedRowInformation(coins,getComparator(orderDirection,valueToOrderBy)).map((coin,index)=>(\r\n                            <TableRow key={index} className=\"coin\">\r\n                                <TableCell className=\"coin-name\">\r\n                                    <img src={coin.image}/>\r\n                                    {coin.name}\r\n                                </TableCell>\r\n                                <TableCell className=\"coin-symbol\">\r\n                                    {coin.symbol}\r\n                                </TableCell>\r\n                                \r\n                                <TableCell className=\"coin-price \">\r\n                                    ₹{coin.current_price.toLocaleString('en-IN')}\r\n                                </TableCell>\r\n                                {/* <TableCell className=\"coin-percent \">\r\n                                    {coin.price_change_percentage_24h.toFixed(2)}%\r\n                                </TableCell> */}\r\n\r\n                                {coin.price_change_percentage_24h < 0 ? (\r\n                                    <TableCell className='coin-percent red'>{coin.price_change_percentage_24h.toFixed(2)}%</TableCell>\r\n                                    ) : (\r\n                                    <TableCell className='coin-percent green'>{coin.price_change_percentage_24h.toFixed(2)}%</TableCell>\r\n                                )}\r\n\r\n                                <TableCell className=\"coin-high\">\r\n                                    ₹{coin.high_24h.toLocaleString('en-IN')}\r\n                                </TableCell>\r\n                                <TableCell classNam=\"coin-low\">\r\n                                    ₹{coin.low_24h.toLocaleString('en-IN')}\r\n                                </TableCell>\r\n                                <TableCell className=\"coin-marketcap \">\r\n                                    ₹{coin.market_cap.toLocaleString('en-IN')}\r\n                                </TableCell>\r\n                                \r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n               \r\n                    {/* {   \r\n                        sortedRowInformation(rowInformation,getComparator(orderDirection,valueToOrderBy)).map((coin,index)=>(\r\n                            <TableRow key={index}>\r\n                                <TableCell>\r\n                                    {coin.name}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {coin.id}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    } */}\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport TableContent from './table/TableContent'\r\nimport {AiOutlineStock} from 'react-icons/ai' \r\n\r\n\r\nfunction App() {\r\n  const [coins,setCoins]=useState([]);\r\n  const [loading,setLoading]=useState(false);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(()=>{\r\n    const fetchCoins = async()=>{\r\n      setLoading(true);\r\n      const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n      setCoins(res.data);\r\n      setLoading(false);\r\n    }\r\n    fetchCoins();\r\n    \r\n  },[])\r\n  console.log(coins);\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const filteredCoins = coins.filter(coin =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  // console.log(filteredCoins);\r\n  return (\r\n    <div className=\"container coin-app \" >\r\n      <h1 className=\"main-heading \" >Crypto Tracker<AiOutlineStock fill=\"#ddf1c3\"/></h1>\r\n      <div className='coin-search'>\r\n        {/* <h1 className='coin-text'>Search a currency</h1> */}\r\n        <form>\r\n          <input\r\n            className='coin-input'\r\n            type='text'\r\n            onChange={handleChange}\r\n            placeholder='Search a currency'\r\n          />\r\n        </form>\r\n      </div>\r\n      \r\n      <TableContent coins={filteredCoins}/>\r\n      \r\n    </div> \r\n     \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n// key={coin.id}\r\n// name={coin.name}\r\n// price={coin.current_price}\r\n// symbol={coin.symbol}\r\n// marketcap={coin.total_volume}\r\n// volume={coin.market_cap}\r\n// image={coin.image}\r\n// priceChange={coin.price_change_percentage_24h}\r\n// loading={loading}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}